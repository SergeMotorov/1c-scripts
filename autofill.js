async function fetchGoogleSheetData() {
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values/${config.range}?key=${config.apiKey}`;

    try {
        const response = await fetch(url);
        const data = await response.json();

        if (!data.values) throw new Error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");

        return data.values.map(row => ({
            article: row[0] || "",
            quantity: row[1] || "",
            price: row[2] || "",
            total: row[3] || ""
        }));
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
        return [];
    }
}

async function fillDataIn1C() {
    console.log("üîÑ –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ 1–°...");
    let data = await fetchGoogleSheetData();

    for (let i = 0; i < data.length; i++) {
        let { article, quantity, price, total } = data[i];

        if (!article) continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

        // 2.0 –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        let addRowBtn = document.querySelector("[id^='form'][id$='_–¢–æ–≤–∞—Ä—ã–î–æ–±–∞–≤–∏—Ç—å'] > span");
        if (addRowBtn) {
            addRowBtn.click();
            await sleep(500);
        }

        // 2.1 –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–æ –ø–æ–ª–µ –∞—Ä—Ç–∏–∫—É–ª–∞
        let articleField = document.querySelector("#grid_form2_–¢–æ–≤–∞—Ä—ã .gridLine.select.eActivityBack > div:nth-child(2) > div > div");
        if (articleField) {
            await typeText(articleField, article);
        }

        // 2.3 –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –∞—Ä—Ç–∏–∫—É–ª–∞
        await sleep(500);
        let selectedItem = document.querySelector(".eddText.dots");
        if (!selectedItem || !selectedItem.innerText.includes(article)) {
            console.warn(`‚ùå –ê—Ä—Ç–∏–∫—É–ª ${article} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
            pauseScript();
            return;
        }
        selectedItem.click();
        await sleep(500);

        // 2.4 –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        let quantityField = document.querySelector("#grid_form2_–¢–æ–≤–∞—Ä—ã .gridLine.select.eActivityBack > div:nth-child(3) > div > div");
        if (quantityField) {
            await typeText(quantityField, quantity);
        }

        // 2.6 –í–≤–æ–¥ —Ü–µ–Ω—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (price) {
            let priceField = document.querySelector("#grid_form2_–¢–æ–≤–∞—Ä—ã .gridLine.select.eActivityBack > div:nth-child(5) > div > div");
            if (priceField) {
                await typeText(priceField, price);
            }
        }

        // 2.7 –í–≤–æ–¥ —Å—É–º–º—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (total) {
            let totalField = document.querySelector("#grid_form2_–¢–æ–≤–∞—Ä—ã .gridLine.select.eActivityBack > div:nth-child(6) > div > div");
            if (totalField) {
                await typeText(totalField, total);
            }
        }

        await sleep(500);
    }
}
async function typeText(element, text) {
    element.focus();
    element.value = "";
    for (let char of text) {
        element.value += char;
        element.dispatchEvent(new Event('input', { bubbles: true }));
        await sleep(100 + Math.random() * 50); // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—á–∞—Ç–∏
    }
}
let isPaused = false;

function pauseScript() {
    isPaused = true;
    console.log("‚è∏ –°–∫—Ä–∏–ø—Ç –Ω–∞ –ø–∞—É–∑–µ.");
}

function resumeScript() {
    isPaused = false;
    console.log("‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞.");
    fillDataIn1C(); // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
}

async function sleep(ms) {
    while (isPaused) {
        await new Promise(resolve => setTimeout(resolve, 500));
    }
    return new Promise(resolve => setTimeout(resolve, ms));
}
window.fillDataIn1C = fillDataIn1C;
